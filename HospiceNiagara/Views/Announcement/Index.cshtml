@*@model IEnumerable<HospiceNiagara.Models.Announcement>*@
@model HospiceNiagara.Models.Announcement
@*@{
    ViewBag.Title = "Index";
}*@

@* Div for entire page *@
<div class="container">
@*Div holding Announment List view and CRUD *@
    <div class="col-sm-6">
        <div class="panel panel-success ">
            <div class="panel-heading">
                <span id="announcmentsTitle">Announcments</span>
                <span id="newAnnouncmentTitle" hidden>New Announcment</span>
                <div id="glyphNewAnnouncment" class="glyphicon glyphicon-plus pull-right"></div>
            </div>
@* Announcement list view panel *@
            <div id="announcmentContent" class="panel-body" >
           
                <table class="table table-striped table-bordered">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.AnnounceText)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.AnnounceEndDate)
                        </th>
                        <th></th>
                    </tr>

                    @foreach (var item in (IEnumerable<HospiceNiagara.Models.Announcement>)ViewData["AnnouncementOrEvent"])
                    {
                        if(item.IsEvent == false)
                        {
                       
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.AnnounceText)
                            <td>
                                @Html.DisplayFor(modelItem => item.AnnounceEndDate)
                            </td>
                            <td>
                                @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                                @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                                @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                               
                            </td>
                        </tr>
                         }
                    }
                   

                </table>
            </div>
@* Create announcement panel *@
            <div id="newAnnouncmentContent" class="panel-body" hidden>
               
                  @using (Html.BeginForm())
                  {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="input-group">
                        <span class="input-group-addon" id="basic-addon1">@Html.LabelFor(model => model.AnnounceText, htmlAttributes: new { @class = "" })</span>
                        @Html.EditorFor(model => model.AnnounceText, new { htmlAttributes = new { @class = "form-control" } })

                    </div>
                    @Html.ValidationMessageFor(model => model.AnnounceText, "", new { @class = "text-danger" })




                    <div class="input-group">
                        <span class="input-group-addon" id="basic-addon1">
                            @Html.LabelFor(model => model.AnnounceEndDate, htmlAttributes: new { @class = "" })
                        </span>
                        @Html.EditorFor(model => model.AnnounceEndDate, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.AnnounceEndDate, "", new { @class = "text-danger" })




                    <div class="btn-group">
                        <input type="submit" value="Create" name="CreateAnnouncement" class="btn btn-primary">
                    </div>
                    @Html.ActionLink("Cancel", "Index")


                  }       
            </div>
        </div>        
    </div>

@* Div for Events list view and CRUD *@
    <div class="col-sm-6">
        <div class="panel panel-success ">
            <div class="panel-heading">
                <span id="eventsTitle">Events</span>
                <span id="newEventTitle" hidden>New Event</span>
                <div id="glyphNewEvent" class="glyphicon glyphicon-plus pull-right"></div>
            </div>

@* Div for Event list view *@
            <div id="eventContent" class="panel-body">
                <table class="table table-striped table-bordered">

    <tr>
        <th>
            @Html.DisplayNameFor(model => model.AnnounceText)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AnnounceEndDate)
        </th>
        <th></th>
    </tr>

                    @foreach (var item in (IEnumerable<HospiceNiagara.Models.Announcement>)ViewData["AnnouncementOrEvent"])
                    {
                        if(item.IsEvent == true)
                        {

                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.AnnounceText)
                                <td>
                                    @Html.DisplayFor(modelItem => item.AnnounceEndDate)
                                </td>
                                <td>
                                    @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                                    @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                                    @Html.ActionLink("Delete", "Delete", new { id = item.ID })

                                </td>
                            </tr>
                        }

                    }
                </table>
            </div>

@* Div for Event Create *@
            <div id="newEvent" class="panel-body" hidden>
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="input-group">
                        <span class="input-group-addon" id="basic-addon1">@Html.LabelFor(model => model.AnnounceText, htmlAttributes: new { @class = "" })</span>
                        @Html.EditorFor(model => model.AnnounceText, new { htmlAttributes = new { @class = "form-control" } })

                    </div>
                    @Html.ValidationMessageFor(model => model.AnnounceText, "", new { @class = "text-danger" })




                    <div class="input-group">
                        <span class="input-group-addon" id="basic-addon1">
                            @Html.LabelFor(model => model.AnnounceEndDate, htmlAttributes: new { @class = "" })
                        </span>
                        @Html.EditorFor(model => model.AnnounceEndDate, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    @Html.ValidationMessageFor(model => model.AnnounceEndDate, "", new { @class = "text-danger" })




                    <div class="btn-group">
                        <input type="submit" value="Create2" name="CreateEvent" class="btn btn-primary">
                    </div>
                    @Html.ActionLink("Cancel", "Index")


                }
            </div>           
        </div>

@* Div for Deathnotice List and CRUD *@
        <div class="panel panel-default ">
            <div class="panel-heading">
                <span id="deathNoticeTitle">Notices of Death</span>
                <span id="newDeathNoticeTitle" hidden>New Death Notice</span>
                <div id="glyphDeathHide" class="glyphicon glyphicon-collapse-down pull-right"></div>
                <div id="glyphDeathShow" class="glyphicon glyphicon-collapse-up pull-right"></div>
                <div id="glyphNewDeathNotice" class="glyphicon glyphicon-plus pull-right"></div>
            </div>
            <div id="panelDeathNoticeContent">
@* Div for death notice List view *@
                <div id="deathNoticeContent" class="panel-body">
                    <table class="table table-striped table-bordered">
                       
                       
                       @foreach(var item in (IEnumerable<HospiceNiagara.Models.DeathNotice>)ViewData["DeathNoticeList"])
                       { 
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => item.DnFirstName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => item.DnMiddleName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => item.DnLastName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => item.DnDate)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => item.DnLocation)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => item.DnNotes)
                            </th>
                            <th></th>
                        </tr>
                           break;
                       }                       

                        @foreach (var item in (IEnumerable<HospiceNiagara.Models.DeathNotice>)ViewData["DeathNoticeList"])
                        {
                           
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.DnFirstName)
                                    <td>
                                        @Html.DisplayFor(modelItem => item.DnMiddleName)
                                    <td>
                                        @Html.DisplayFor(modelItem => item.DnLastName)
                                    <td>
                                        @Html.DisplayFor(modelItem => item.DnDate)
                                    <td>
                                        @Html.DisplayFor(modelItem => item.DnLocation)
                                    <td>
                                        @Html.DisplayFor(modelItem => item.DnNotes)
                                    </td>
                                    <td>
                                        @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                                        @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                                        @Html.ActionLink("Delete", "Delete", new { id = item.ID })

                                    </td>
                                </tr>
                            }
                        


                    </table>
                </div>

@* Panel for Create Death Notice *@
                <div id="newDeathNotice" class="panel-body" hidden>
            
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            <h4>DeathNotice</h4>
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                       @foreach(var item in (IEnumerable<HospiceNiagara.Models.DeathNotice>)ViewData["DeathNoticeList"])
                       {
                            <div class="form-group">

                                @Html.LabelFor(model => item.DnFirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => item.DnFirstName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => item.DnFirstName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => item.DnMiddleName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => item.DnMiddleName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => item.DnMiddleName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => item.DnLastName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => item.DnLastName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => item.DnLastName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => item.DnLocation, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => item.DnLocation, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => item.DnLocation, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => item.DnNotes, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => item.DnNotes, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => item.DnNotes, "", new { @class = "text-danger" })
                                </div>
                            </div>
                           break;
                       }

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Create3" name="CreateDeathNotice" class="btn btn-primary">
                                </div>
                            </div>
                        </div>
                    }

                    <div>
                        @Html.ActionLink("Back to List", "Index")
                    </div>



                </div>
            </div>
        </div>
    </div>


</div>

@Scripts.Render("~/bundles/jquery")

<script>
    $(document).ready(function () {
        //Hides death notices by default
        $('#glyphDeathHide').hide();
        $('#glyphNewDeathNotice').hide();
        $('#panelDeathNoticeContent').hide();

        //Controls hiding and showing the death notices
        $('#glyphDeathHide').on('click', function () {
            $('#panelDeathNoticeContent').slideToggle();
            $('#glyphDeathHide').hide();
            $('#glyphDeathShow').toggle();
            $('#glyphNewDeathNotice').fadeToggle();
        });
        
        $('#glyphDeathShow').on('click', function () {
            $('#panelDeathNoticeContent').slideToggle();
            $('#glyphDeathShow').hide();
            $('#glyphDeathHide').show();
            $('#glyphNewDeathNotice').fadeToggle();
        });

        $('#glyphNewDeathNotice').on('click', function () {
            $('#deathNoticeTitle').slideToggle();
            $('#deathNoticeContent').slideToggle();
            $('#newDeathNotice').slideToggle();
            $('#newDeathNoticeTitle').slideToggle();
            $('#glyphNewDeathNotice').fadeToggle();
        });

        $('#btnAddDeathNotice').on('click', function () {
            $('#deathNoticeTitle').slideToggle();
            $('#deathNoticeContent').slideToggle();
            $('#newDeathNotice').slideToggle();
            $('#newDeathNoticeTitle').slideToggle();
            $('#glyphNewDeathNotice').fadeToggle();
        });

        $('#btnCancelDeathNotice').on('click', function () {
            $('#deathNoticeTitle').slideToggle();
            $('#deathNoticeContent').slideToggle();
            $('#newDeathNotice').slideToggle();
            $('#newDeathNoticeTitle').slideToggle();
            $('#glyphNewDeathNotice').fadeToggle();
        });

        $('#glyphNewEvent').on('click', function () {
            $('#eventsTitle').slideToggle();
            $('#eventContent').slideToggle();
            $('#newEvent').slideToggle();
            $('#newEventTitle').slideToggle();
            $('#glyphNewEvent').fadeToggle();
        });

        $('#btnAddEvent').on('click', function () {
            $('#eventsTitle').slideToggle();
            $('#eventContent').slideToggle();
            $('#newEvent').slideToggle();
            $('#newEventTitle').slideToggle();
            $('#glyphNewEvent').fadeToggle();
        });

        $('#btnCancelEvent').on('click', function () {
            $('#eventsTitle').slideToggle();
            $('#eventContent').slideToggle();
            $('#newEvent').slideToggle();
            $('#newEventTitle').slideToggle();
            $('#glyphNewEvent').fadeToggle();
        });

        $('#glyphNewAnnouncment').on('click', function () {
            $('#announcmentsTitle').slideToggle();
            $('#announcmentContent').slideToggle();
            $('#newAnnouncmentContent').slideToggle();
            $('#newAnnouncmentTitle').slideToggle();
            $('#glyphNewAnnouncment').fadeToggle();
        });

        //$('#btnAddAnnouncment').on('click', function () {
        //    //$('#announcmentsTitle').slideToggle();
        //    //$('#announcmentContent').slideToggle();
        //    //$('#newAnnouncmentContent').slideToggle();
        //    //$('#newAnnouncmentTitle').slideToggle();
        //    //$('#glyphNewAnnouncment').fadeToggle();
           
        //});

        //$('#btnCancelAnnouncment').on('click', function () {
        //    $('#announcmentsTitle').slideToggle();
        //    $('#announcmentContent').slideToggle();
        //    $('#newAnnouncmentContent').slideToggle();
        //    $('#newAnnouncmentTitle').slideToggle();
        //    $('#glyphNewAnnouncment').fadeToggle();
        //});
    });
</script>

