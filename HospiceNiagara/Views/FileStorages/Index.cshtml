@model HospiceNiagara.Models.FileStorage

@{
    ViewBag.Title = "Index";
}

@* Paul Boyko March 2015 *@

<div class="container">
    @*Initialize filters and gets current url*@
    @{
        List<HospiceNiagara.ViewModels.FileCatVM> cat = ViewBag.Cat;
        List<HospiceNiagara.ViewModels.FileSubCatVM> subCat = ViewBag.FileSubCat;

        var url = Request.Url.PathAndQuery;
     }
     
    @*Column for the File Window*@
    <div class="col-md-10">
        <div class="panel panel-info">

            @*Panel Header*@
            <div class="panel-heading">
                <span id="fileListTitle">Files</span>
                <span id="newFileListTitle" hidden>Upload Files</span>
                @if (User.IsInRole("Administrator") || User.IsInRole("Upload Resources"))
                {
                <div id="glyphNewFile" class="glyphicon glyphicon-plus pull-right"></div>
                }
                @{
                    HospiceNiagara.ViewModels.SearchDisplayVM dsply = ViewBag.SearchCat;
                    if(dsply != null)
                    {
                        @Html.Raw("Search: " + dsply.SeachCatName + " - " + dsply.SearchSubCatName)
                    }
                    else
                    {
                         @:Search
                    }                    
                }
            </div>

            @*Panel Body for Main Content*@
            <div id="fileContent" class="panel-body">
                <div class="panel-body-toolbar form-inline">
                    @using (Html.BeginForm())
                    { 
                        @Html.TextBox("searchString", null, new { @class = "form-control", @placeholder ="Search by File Name or Description" }) 
                        <input type="submit" value="Search" class="btn btn-default" />  
                        @Html.ActionLink("Clear", "Index", new  { id = 0 })                    
                    }
                </div>
                <table class="table table-striped table-bordered" style="width:100%;">
                    <tr>
                        
                        <th>
                            @Html.DisplayNameFor(model => model.FileDescription)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FileName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FileUploadDateString)
                        </th>
                        @if (User.IsInRole("Administrator") || User.IsInRole("View Admin Info"))
                        {
                            <th>
                                @Html.DisplayNameFor(model => model.UploadedBy)
                            </th>
                        }
                        <th></th>
                    </tr>

                    @foreach (var item in (IEnumerable<HospiceNiagara.Models.FileStorage>)ViewData["Files"])
                    {
                        <tr>
                            
                            <td>
                                @Html.DisplayFor(modelItem => item.FileDescription)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.FileName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.FileUploadDateString)
                            </td>
                            @if (User.IsInRole("Administrator"))
                            {
                                <td>
                                    @Html.DisplayFor(modelItem => item.UploadedBy)
                                </td>
                            }
                            <td>
                                @Html.ActionLink("Download", "Download", new { id = item.ID })<br />
                                @if (User.IsInRole("Administrator"))
                                {
                                    @Html.ActionLink("Edit", "Edit", new { id = item.ID })<br />
                                    @Html.ActionLink("Details", "Details", new { id = item.ID })<br />
                                    @Html.ActionLink("Delete", "Delete", new { id = item.ID })<br />
                                }
                            </td>
                        </tr>
                    }
                </table>
            </div>

            @*Panel Body for Uploading a New File*@
            <div id="newFileContent" class="panel-body" hidden>
                @using (Html.BeginForm("", "FileStorages", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            <label class="control-label" style="padding-left:15px" for="fileDescription">Description</label>
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.FileDescription, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FileDescription, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-12">
                                <input type="file" name="FileUpload" class="" />
                                @Html.ValidationMessageFor(model => model.FileName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label" style="padding-left:15px">Visible to</label>
                            <div class="col-md-12">
                                <table class="table">
                                    <tr>
                                    @{
                                        int cnt = 0;
                                        List<HospiceNiagara.ViewModels.RoleVM> roles = ViewBag.RolesLists;
                                        foreach(var r in roles)
                                        {
                                            if(r.IsPerm == false)
                                            {
                                                if (cnt++ % 2 == 0)
                                                {
                                                    @:</tr><tr>
                                                }
                                                @:<td>
                                                    <input type="checkbox"
                                                    class="chkRoles"
                                                    name="selectedRoles"
                                                    data-size="small"
                                                    value="@r.RoleID"
                                                    @(Html.Raw(r.RoleAssigned ? "checked=\"checked\"" : "")) />
                                                    <br />
                                                    <div class="text-left">
                                                        @Html.DisplayFor(modelItem => r.RoleName)
                                                    </div>
                                                @:</td>
                                            }            
                                        }
                                        @:</tr>
                                    }
                            </table>
                            </div>
                        </div>
                        @*<h4>Categories</h4>*@
                        @foreach (var cats in cat)
                        {
                            @:<div class="form-group">
                                <label class="control-label" style="padding-left:15px">@Html.DisplayFor(modelItem => cats.FileCatName)</label>
                                <table class="table">
                                    @foreach (var sc in subCat)
                                    {
                                        if (cats.ID == sc.FileCatFK)
                                        {
                                            <tr>
                                                <td style="padding-left:15px; width:50%;">
                                                    @sc.FileSubCatName
                                                </td>
                                                <td>
                                                    <input type="checkbox"
                                                            name="selectedSubCats"
                                                            value="@sc.ID"
                                                            @(Html.Raw(sc.FileSubCatAssigned ? "checked=\"checked\"" : "")) />
                                                </td>
                                            </tr>
                                            
                                        }
                                    }
                                </table>
                            @:</div>
                        }
                        
                        <div class="form-group">
                            <div class="col-md-10">
                                <input type="submit" value="Create" name="UploadFile" class="btn btn-primary" />
                                @Html.ActionLink("Cancel", "Index")
                            </div>
                        </div>
                    </div>
                    
                }
            </div>

        </div>
    </div>

    @*Column for the File Filters*@
    <div class="col-md-2">
        @foreach (var cats in cat)
        {
            <div class="panel panel-success text-center">
                <div class="panel-heading">
                    @Html.DisplayFor(modelItem => cats.FileCatName)
                </div>
                <ul class="list-group">
                    @foreach (var subCats in subCat)
                    {
                        if (cats.ID == subCats.FileCatFK)
                        {

                            if (url.EndsWith("FileStorages/Index"))
                            {
                                <li class="list-group-item"><a href="Index/@subCats.ID"> @Html.DisplayFor(modelItem => subCats.FileSubCatName)</a> </li>
                            }
                            else if (url.EndsWith("FileStorages"))
                            {
                                <li class="list-group-item"><a href="FileStorages/Index/@subCats.ID"> @Html.DisplayFor(modelItem => subCats.FileSubCatName)</a> </li>
                            }
                            else
                            {
                                <li class="list-group-item"><a href="@subCats.ID"> @Html.DisplayFor(modelItem => subCats.FileSubCatName)</a> </li>
                            }
                        }
                    }
                </ul>
            </div>
        }
    </div>
</div>

@section scripts{
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            $('#glyphNewFile').on('click', function () {
                $('#fileListTitle').slideToggle();
                $('#fileContent').slideToggle();
                $('#newFileContent').slideToggle();
                $('#newFileListTitle').slideToggle();
                $('#glyphNewFile').fadeToggle();
            });

            $("[name='selectedRoles']").bootstrapSwitch();
            $("[name='selectedSubCats']").bootstrapSwitch();
        });
    </script>
}

                                       
 
