@model HospiceNiagara.Models.BoardContact
@*Andreas King March 2015*@
@{
    ViewBag.Title = "Index";
}


<div class="panel panel-success">
    <div class="panel-heading">
        <span id="ContactsTitle">Board Contacts</span>
        <span id="newContactTitle" hidden>New Board Contact</span>
        @if (User.IsInRole("Administrator"))
        {
        <div id="glyphAddContact" class="glyphicon glyphicon-plus pull-right"></div>
        }
    </div>
    <div class="panel-body" id="ContactPanel">
        <table class="table table-striped table-bordered" style="width:100%;">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.AppUser.UserFullName)
                </th>
                @*<th>
                    @Html.DisplayNameFor(model => model.AppUser.UserLName)
                </th>*@
                <th>
                    @Html.DisplayNameFor(model => model.BoardContPosition)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.AppUser.PhoneNumber)
                </th>
                @if(User.IsInRole("Administrator"))
                {    
                <th>
                        
                </th>
                }
            </tr>

            @foreach (var item in (IEnumerable<HospiceNiagara.Models.BoardContact>)ViewData["Contact"])
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.AppUser.UserFullName)
                    </td>
                    @*<td>
                        @Html.DisplayFor(modelItem => item.AppUser.UserLName)
                    </td>*@
                    <td>
                        @Html.DisplayFor(modelItem => item.BoardContPosition)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.AppUser.PhoneNumber)
                    </td>
                    @if(User.IsInRole("Administrator"))
                    {  
                    <td>
                        @*@Html.ActionLink("Job Description", "Index", new { id = item.ID })*@ 
                        @Html.ActionLink("Edit", "Edit", new { id = item.ID })    <span>&#124;</span>
                        @Html.ActionLink("Details", "Details", new { id = item.ID })    <span>&#124;</span>
                        @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                    </td>
                    }
                </tr>
            }
        </table>
    </div>

    @* New Contact Body *@
    <div class="panel-body" id="NewContact" hidden>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                <label class="control-label col-md-2">Select User</label>
                <div class="col-md-10">
                    <select class="form-control" name="selectedUsers">
                        @{

                        List<HospiceNiagara.ViewModels.UserVM> use = ViewBag.User;
                        foreach (var t in use)
                        {
                        <option value=@t.UserID>@t.UserFullName</option>
                        }
                        @:
                        }
                        </select>

                </div>                    
            </div>
                
                    
                       
                    <div class="form-group">
                        @Html.LabelFor(model => model.BoardContPosition, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.BoardContPosition, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BoardContPosition, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    

                    @*<div class="form-group">
                        @Html.LabelFor(model => model.BoardContHomeAddy, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.BoardContHomeAddy, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BoardContHomeAddy, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.BoardContWorkAddy, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.BoardContWorkAddy, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BoardContWorkAddy, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*<div class="form-group">
                        @Html.LabelFor(model => model.BoardContHomePhone, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.BoardContHomePhone, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BoardContHomePhone, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.BoardContWorkPhone, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.BoardContWorkPhone, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BoardContWorkPhone, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.BoardContCellPhone, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.BoardContCellPhone, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BoardContCellPhone, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.BoardContFaxNum, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.BoardContFaxNum, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BoardContFaxNum, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.BoardContPartnerName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.BoardContPartnerName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BoardContPartnerName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" name="CreateContact" class="btn btn-primary" />
                            @Html.ActionLink("Cancel", "Index")
                        </div>
                    </div>
                </div>
        }
    </div>
</div>
<div class="panel panel-success">
    <div class="panel-heading">
        <span id="ContactsTitle">Staff Contacts</span>
    </div>
    <div class="panel-body" id="ContactPanel">
        <table class="table table-striped table-bordered" style="width:100%;">
            <tr>
                <th>
                    Full Name
                </th>
                <th>
                    Job Description
                </th>
                <th>
                    Email
                </th>
                <th>
                    Ext.
                </th>
                <th>
                    Work Cell
                </th>
                @if (User.IsInRole("Administrator"))
                {
                    <th></th>
                }
            </tr>

            @foreach (var item in (IEnumerable<HospiceNiagara.Models.StaffContact>)ViewData["StaffContact"])
            {
                <tr>
                    <td>
                        @Html.DisplayFor(model => item.ContUser.UserFullName)
                    </td>
                    <td>
                        @foreach (var jd in item.JobDescriptions)
                        {

                            @Html.DisplayFor(model => jd.JobTitle) <br />

                        }
                    </td>
                    <td>
                        @Html.DisplayFor(model => item.ContUser.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(model => item.ContExten)
                    </td>
                    <td>
                        @Html.DisplayFor(model => item.ContWorkCell)
                    </td>
                    @if (User.IsInRole("Administrator"))
                    {
                        <td>
                            @Html.ActionLink("Edit", "../StaffContact/Edit", new { id = item.ID }) |
                            @Html.ActionLink("Details", "../StaffContact/Details", new { id = item.ID }) |
                            @Html.ActionLink("Delete", "../StaffContact/Delete", new { id = item.ID })
                        </td>
                    }
                </tr>
            }
        </table>
    </div>
</div>

@*@{
List<HospiceNiagara.ViewModels.JobDescVM> jobbs = ViewBag.JobDescriptions;

bool assigned = false;
    foreach (var j in jobbs)
    {
        if(j.JobAssigned==true)
        {
            if(assigned == false)
            {
                @:<div class="col-sm-4" id="panelPositionDesc">
                @:<div class="panel panel-success">
                    @:<div class="panel-heading">
                        @:About this position
                    @:</div>
                    assigned = true;
            }
            
                    @:<div class="panel-body">
                        @:<h4>@j.JobName</h4>
                        @:<p>@j.JobDesc</p>
                @:</div>

            }
        }
        if(assigned == true)
        {
            @:</div>
        @:</div>
        }
    }*@

    

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")

<script>
    $(document).ready(function () {
        $('#glyphAddContact').on('click', function () {
            $('#ContactsTitle').slideToggle();
            $('#ContactPanel').slideToggle();
            $('#NewContact').slideToggle();
            $('#newContactTitle').slideToggle();
            $('#glyphAddContact').fadeToggle();
        });
    });
</script>