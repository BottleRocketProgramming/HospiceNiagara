@model HospiceNiagara.Models.DeathNotice

@{
    ViewBag.Title = "Rest in Peace";
}
<link href='http://fonts.googleapis.com/css?family=Rochester' rel='stylesheet' type='text/css'>
@* Div for Deathnotice List and CRUD *@
<div class="col-md-12">
    <div class="panel panel-success">
        <div class="panel-heading">
            <span id="deathNoticeTitle">Rest in Peace</span>
            <span id="newDeathNoticeTitle" hidden>New Death Notice</span>
            @if (User.IsInRole("Create/Modify Death Notices") || User.IsInRole("Administrator"))
            {
                <span id="glyphNewDeathNotice" class="glyphicon glyphicon-plus pull-left"></span>
            }
        </div>
        <div id="panelDeathNoticeContent">
            @* Div for death notice List view *@
            <div id="deathNoticeContent" class="panel-body">
                <table class="table ">
                    <tr>
                        <th>
                            @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSortParm })
                        </th>
                        <th>
                            @Html.ActionLink("Date", "Index", new { sortOrder = ViewBag.DateSortParm })
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DnLocation)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.DnNotes)
                        </th>
                        @if (User.IsInRole("Administrator") || User.IsInRole("Create/Modify Death Notices"))
                        {
                            <th></th>
                        }
                    </tr>

                    @foreach (var item in (IEnumerable<HospiceNiagara.Models.DeathNotice>)ViewData["DeathNoticeList"])
                    {
                        <tr>
                            <td>
                                @if (!string.IsNullOrEmpty(item.DnLink) && item.DnLink.Contains("http"))
                                {<a target="_blank" href="@item.DnLink">@Html.DisplayFor(modelItem => item.DnFullName)</a>}
                                else if (!string.IsNullOrEmpty(item.DnLink))
                                {<a target="_blank" href="http://@item.DnLink">@Html.DisplayFor(modelItem => item.DnFullName)</a> }
                                else
                                {
                                    @Html.DisplayFor(modelItem => item.DnFullName)
                                }
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DnDateString)
                            </td>

                            <td>
                                @Html.DisplayFor(modelItem => item.DnLocation)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DnNotes)
                            </td>
                            @if (User.IsInRole("Administrator") || User.IsInRole("Create/Modify Death Notices"))
                            {
                                <td>
                                    @Html.ActionLink("Edit", "Edit", new { id = item.ID })
                                    @if (User.IsInRole("Administrator") || User.IsInRole("Remove Records"))
                                    {
                                       @:|
                                       @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                                    }
                                </td>
                            }
                        </tr>
                    }



                </table>
            </div>


            @* Panel for Create Death Notice *@
            <div id="newDeathNotice" class="panel-body" hidden>

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">

                            @Html.LabelFor(model => model.DnFirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DnFirstName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DnFirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DnMiddleName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DnMiddleName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DnMiddleName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DnLastName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DnLastName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DnLastName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DnDate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DnDate, new { htmlAttributes = new { @class = "form-control datecontrol" } })
                                @Html.ValidationMessageFor(model => model.DnDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DnLocation, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DnLocation, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DnLocation, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DnNotes, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DnNotes, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DnNotes, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DnLink, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DnLink, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DnLink, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Create" name="CreateDeathNotice" class="btn btn-primary"> |
                                @Html.ActionLink("Back to List", "Index")
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@* Death Notice Poem *@
<div class="col-md-offset-4">
    <div class="col-md-6" id="deathnoticePoem">
        <p class="handwritingPoem">
            @{
                HospiceNiagara.ViewModels.DnPoemVM poem = ViewBag.DnPoem;
                if (poem != null)
                {
                    @Html.Raw(poem.DnPoem);
                }
            }
        </p>
    </div>
</div>

@Scripts.Render("~/bundles/jqueryval")

<script>
    $(document).ready(function () {
        $('#glyphNewDeathNotice').on('click', function () {
            $('#deathNoticeTitle').slideToggle();
            $('#deathNoticeContent').slideToggle();
            $('#newDeathNotice').slideToggle();
            $('#newDeathNoticeTitle').slideToggle();
            $('#glyphNewDeathNotice').fadeToggle();
        });
    });
</script>
