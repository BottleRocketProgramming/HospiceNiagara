@using PagedList.Mvc;

@model PagedList.IPagedList<HospiceNiagara.Models.ApplicationUser>

@{
    ViewBag.Title = "Index";
}

@Html.ActionLink("Export User List", "ExportUserList", "ApplicationUsers", null, new { @class = "btn btn-default pull-right" })
<span class="pull-right" style="padding-right: 35px; padding-top: 6px;">Users registered @ViewBag.usersConfirmed</span>
@using (Html.BeginForm())
{
        @Html.DropDownList("roles", (IEnumerable<SelectListItem>)ViewBag.Roles, "All Roles", new { @id = "ddlRoles", onchange = "this.form.submit();", @class = "pull-left form-control" })
        <div class="input-group" style="width:500px; margin-left:27%;">
            @Html.TextBox("searchString", null, new { @class = "form-control searchbar", @placeholder = "Search by Name or Email" })
            <span class="input-group-btn">
                <input type="submit" value="Search" class="btn btn-primary" id="btnSearch" />
            </span>
        </div>
}

<table class="table">
    <tr>
        <th>
            User Name
        </th>
        <th>
            Full Name
        </th>
        <th>
            Roles
        </th>
        <th>
            Email Confirmed
        </th>

        <th>
            Phone Number
        </th>
        <th>
            Date of Birth
        </th>
        <th>
            Last Login
        </th>
        <th>
            Address
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserFullName)
            </td>
            <td>
                @{
                    HospiceNiagara.Models.ApplicationDbContext db = new HospiceNiagara.Models.ApplicationDbContext();
                    int c = 0;

                    foreach (var r in item.Roles)
                    {
                        var ur = db.Roles.Where(a => a.Id == r.RoleId).Single();
                        @Html.DisplayFor(modelItem => ur.Name)
                        @:<br />
                        c++;
                        if (c == 2)
                        {
                            @Html.Raw("...")
                            break;
                        }
                    }
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EmailConfirmed)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.PhoneNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserDOBString)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LoginTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserAddress)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })

            </td>
        </tr>
    }

</table>
<div class="text-center">
    <div class="center-block">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, pageSize = Model.PageSize, searchString = ViewBag.FilterString, roles = ViewBag.FilterRole }))
        Showing @Model.FirstItemOnPage to @Model.LastItemOnPage of @Model.TotalItemCount Users
    </div>
</div>

