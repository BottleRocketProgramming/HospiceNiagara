@model  HospiceNiagara.Models.ApplicationUser
@{
    ViewBag.Title = "Edit";
}

<h2>Edit User</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.UserName)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.UserName)
            </dd>
        </dl>

        <div class="form-group">
            @Html.LabelFor(model => model.UserFName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserFName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserFName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserMName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserMName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserMName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserLName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserLName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserLName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserDOB, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserDOB, new { htmlAttributes = new { @class = "form-control datecontrol" } })
                @Html.ValidationMessageFor(model => model.UserDOB, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control datecontrol" } })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserAddress, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>     
        
        <div class="form-group">
            <label class="control-label col-md-2">Select Roles</label>
            <div class="col-md-offset-2 col-md-10">
                <table class="table">
                    <tr>
                        @{
                            int cnt = 0;
                            List<HospiceNiagara.ViewModels.NetRollVM> roles = ViewBag.RolesLists;
                            foreach (var r in roles)
                            {
                                if(r.IsPerm == false)
                                {
                                    if (cnt++ % 2 == 0)
                                {
                                    @:</tr><tr>
                                }
                                    @:<td>
                                          <input type="checkbox"
                                           name="selectedRoles"
                                           value="@r.RoleID"
                                           @(Html.Raw(r.RoleAssigned ? "checked=\"checked\"" : "")) />
                                           @r.RoleName
                                    @:</td>
                                }
                            }
                        }
                    </tr>
                </table>
            </div>
        </div>

        @if(User.IsInRole("Administrator") || User.IsInRole("Assign User Permissions"))
        {
            
            <div class="form-group">
                @Html.LabelFor(model => model.LockoutEndDateUtc, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LockoutEndDateUtc, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LockoutEndDateUtc, "", new { @class = "text-danger" })
                </div>
            </div>
            
            <div class="form-group">
                <label class="control-label col-md-2">Permissions</label>
                <div class="col-md-offset-2 col-md-10">
                    <table class="table"> 
                        <tr>
                            @{
                                cnt = 0;
                                foreach (var r in roles)
                                {
                                    if(r.IsPerm == true)
                                    {
                                        if (cnt++ % 2 == 0)
                                        {
                                            @:</tr><tr>
                                        }
                                        @:<td>
                                                <input type="checkbox"
                                                name="selectedRoles"
                                                value="@r.RoleID"
                                                @(Html.Raw(r.RoleAssigned ? "checked=\"checked\"" : "")) />
                                                @r.RoleName
                                        @:</td>
                                    }
                                }
                            }
                        </tr>
                    </table>
                </div>
            </div> 
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" id="btnSubmit" value="Save" class="btn btn-primary" /> |
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            $("[name='selectedRoles']").bootstrapSwitch();

        });
    </script>
}

