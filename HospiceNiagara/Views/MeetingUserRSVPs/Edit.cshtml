@model HospiceNiagara.Models.MeetingUserRSVP

@{
    ViewBag.Title = "Edit";
}

<h2>RSVP for @Html.DisplayFor(model => model.MeetingRSVP.EventTitle)</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.ComingYorN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="radio">
                   
                    @Html.RadioButtonFor(model => model.ComingYorN, true) Yes                   
                    @Html.ValidationMessageFor(model => model.ComingYorN, "", new { @class = "text-danger" })
                </div> 
                <div class="radio">
                    @Html.RadioButtonFor(model => model.ComingYorN, false) No
                    @Html.ValidationMessageFor(model => model.ComingYorN, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.ComingYorN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                
            </div>
        </div>*@
        
        <div class="form-group">
            @Html.LabelFor(model => model.RSVPNotes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RSVPNotes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RSVPNotes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" hidden>
            @Html.LabelFor(model => model.AdminRequirements, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AdminRequirements, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AdminRequirements, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (!String.IsNullOrEmpty(Model.AdminRequirements))
        {
            <div class="form-group">
                <label class="control-label col-md-2">@Html.DisplayFor(model => model.AdminRequirements)</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserRequirements, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserRequirements, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" /> |
                @Html.ActionLink("View all your RSVPs", "Index") |
                @Html.ActionLink("Return to Event", "../Meeting/Details/" + Model.MeetingRSVP.ID)
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
