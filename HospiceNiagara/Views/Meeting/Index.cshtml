@model HospiceNiagara.Models.Meeting

@*Andreas King March 2015*@

@{
    ViewBag.Title = "Meetings and Events";
}
<div class="container">
    <div class="col-md-12">
        @{
            bool firstPanel = false;
            foreach (var item in (IEnumerable<HospiceNiagara.Models.Meeting>)ViewData["Meeting"])
            {
                @*Check if item has Images*@
                bool hasImages = false;
                if (item.FileStores.Any(f => f.MimeType.Contains("image"))) { hasImages = true; }
                
                @*Half Page column for each Meeting*@
                <div class="col-sm-6">
                    <div class="panel panel-success">
                        
                        @*Panel Heading*@
                        <div class="panel-heading">
                            @if (User.IsInRole("Administrator") && firstPanel == false || User.IsInRole("Create/Modify Meetings or Events") && firstPanel == false)
                            {
                                <span id="glyphAddEvent" class="glyphicon glyphicon-plus pull-left"></span>
                            }
                            @if (firstPanel.Equals(false))
                            {
                                <span title="Meetings and Events" data-content="Each of these panels is a single meeting or event. You can cycle through images attached to the meeting/event with the arrows, or click on (read more) to view any linked files, more detail for the meeting/event, or RSVP for the event." class="glyphicon glyphicon-info-sign pull-right" data-toggle="popover" data-placement="bottom" data-trigger="hover"></span>
                            }
                            <h3 id="EventsTitle" class="panel-title">
                                @{
                                    var url = Request.Url.PathAndQuery;
                                    if (url.EndsWith("Meeting/Index"))
                                    {
                                        <a href="Details/@item.ID" style="color: inherit; text-decoration: none;">@item.EventTitle</a>
                                    }
                                    else
                                    {
                                        <a href="Meeting/Details/@item.ID" style="color: inherit; text-decoration: none;">@item.EventTitle</a>
                                    }
                                }
                            </h3>
                            <h3 id="newMeetingEventTitle" class="panel-title" hidden>New Event/Meeting</h3>
                        </div>

                        @if (hasImages == false)
                        {
                            <div @{ if(firstPanel==false){
                                @:id="EventPanel"
                            }} class="panel-body listPanel">
                                <div class="col-md-12">
                                    <div>
                                        @Html.Raw(item.DescriptionTrimmed)
                                    </div>
                                    @{
                                        if (url.EndsWith("Meeting/Index"))
                                        {
                                            <a href=Details/@item.ID>(Read More)</a>
                                        }
                                        else
                                        {
                                            <a href=Meeting/Details/@item.ID>(Read More)</a>
                                        }
                                    }
                                    <table class="table" style="margin-top:5px">
                                        <tr>
                                            <td>
                                                On
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.EventDateString)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.EventTime)
                                            </td>
                                    </table>
                                </div>
                            </div>
                        }
                        
                        else
                        {
                           <div @{ if(firstPanel==false){
                                @:id="EventPanel"
                            }} class="panel-body listPanel">
                            <div class="row">
                                <div class="col-md-6">
                                    <div id="myCarousel-@item.ID" class="carousel slide" data-ride="carousel">
                                        <div class="carousel-inner" role="listbox">
                                            @{
                                                var count = 0;
                                                foreach (var f in item.FileStores)
                                                {
                                                    if (f.MimeType.Contains("image"))
                                                    {
                                                        if (count == 0)
                                                        {
                                                            <div class="item active listIMG">
                                                                <img src="~/Uploads/@f.FileName" />
                                                            </div>
                                                        }
                                                        else
                                                        {
                                                            <div class="item listIMG">
                                                                <img src="~/Uploads/@f.FileName" />
                                                            </div>
                                                        }
                                                        count++;
                                                    }
                                                }
                                            }
                                        </div>

                                        <a class="left carousel-control" href="#myCarousel-@item.ID" role="button" data-slide="prev">
                                            <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
                                            <span class="sr-only">Previous</span>
                                        </a>
                                        <a class="right carousel-control" href="#myCarousel-@item.ID" role="button" data-slide="next">
                                            <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
                                            <span class="sr-only">Next</span>
                                        </a>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div>
                                        @Html.Raw(item.DescriptionTrimmed)
                                    </div>
                                    @{
                                        if (url.EndsWith("Meeting/Index"))
                                        {
                                            <a href=Details/@item.ID>(Read More)</a>
                                        }
                                        else
                                        {
                                            <a href=Meeting/Details/@item.ID>(Read More)</a>
                                        }
                                    }
                                    <table class="table" style="margin-top:5px">
                                        <tr>
                                            <td>
                                                On
                                            </td>
                                            <td class="text-right">
                                                @Html.DisplayFor(modelItem => item.EventDateString)
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                            </div>
                        </div> 
                        }

                        
                        @{
                            if (firstPanel == false)
                            {
                                <div class="panel-body" id="NewEvent" hidden>
                                    @using (Html.BeginForm())
                                    {
                                        @Html.AntiForgeryToken()

                                        <div class="form-horizontal">
                                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.EventTitle, htmlAttributes: new { @class = "control-label", @style = "padding-left:15px" })
                                                <div class="col-md-12">
                                                    @Html.EditorFor(model => model.EventTitle, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.EventTitle, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.EventDiscription, htmlAttributes: new { @class = "control-label", @style = "padding-left:15px" })
                                                <div class="col-md-12">
                                                    @Html.TextAreaFor(model => model.EventDiscription, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.EventDiscription, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.EventLocation, htmlAttributes: new { @class = "control-label", @style = "padding-left:15px" })
                                                <div class="col-md-12">
                                                    @Html.EditorFor(model => model.EventLocation, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.EventLocation, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.EventDate, htmlAttributes: new { @class = "control-label", @style = "padding-left:15px" })
                                                <div class="col-md-12">
                                                    @Html.EditorFor(model => model.EventDate, new { htmlAttributes = new { @class = "form-control datecontrol" } })
                                                    @Html.ValidationMessageFor(model => model.EventDate, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.EventTime, htmlAttributes: new { @class = "control-label", @style = "padding-left:15px" })
                                                <div class="col-md-12">
                                                    @Html.EditorFor(model => model.EventTime, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.EventTime, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                            <label class="control-label" style="padding-left:15px">Visible to</label>
                                            <div class="col-md-12">
                                                <table class="table">
                                                    <tr>
                                                        @{
                                                            int cnt = 0;
                                                            List<HospiceNiagara.ViewModels.RoleVM> roles = ViewBag.RolesLists;
                                                            foreach(var r in roles)
                                                            {
                                                                if (cnt++ % 2 == 0)
                                                                {
                                                                    @:</tr><tr>
                                                                }
                                                                @:<td>
                                                                    <input type="checkbox"
                                                                    class="chkRoles"
                                                                    name="selectedRoles"
                                                                    data-size="small"
                                                                    value="@r.RoleID"
                                                                    @(Html.Raw(r.RoleAssigned ? "checked=\"checked\"" : "")) />
                                                                    <br />
                                                                    <div class="text-left">
                                                                        @Html.DisplayFor(modelItem => r.RoleName)
                                                                    </div>
                                                                @:</td>
                                                            }
                                                        @:</tr>
                                                        }
                                                    </table>
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                <div class="col-md-10 col-md-offset-2">
                                                    <label class="control-label">Upload a New File</label>
                                                    <div style="width:280px">
                                                        <input title="Note" data-content="After uploading a file, it must still be attached with the Find and Add Files Textbox." data-toggle="popover" data-placement="right" data-trigger="hover" class="btn btn-default" type="button" id="btnpopu" value="Upload New File" onclick="ShowPopup();" />
                                                    </div>
                                                </div>
                                                <div class="col-md-10 col-md-offset-2">
                                                    <label class="control-label">Find and Add Files:</label>
                                                    <input autocomplete="off" class="form-control" id="fileFinder" name="s" placeholder="Find a file" />

                                                    <div id="searchResults" style="z-index:1000">

                                                    </div>
                                                </div>
                                                <div class="col-md-10 col-md-offset-2">
                                                    <label class="control-label">Selected Files</label>
                                                    @Html.ListBox("selectedFiles", (MultiSelectList)ViewBag.selFiles, new { @class = "form-control" })
                                                    <div>
                                                        <button type="button" id="btnRemoveFile" class="btn btn-danger form-control">
                                                            <span class="glyphicon glyphicon-remove"></span>&nbsp;Remove Selected
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>                        

                                            <div class="form-group">
                                                <div class="col-md-offset-2 col-md-10">
                                                    <input type="submit" value="Create" id="btnSubmit" name="CreateMeeting" class="btn btn-primary" />
                                                    @Html.ActionLink("Cancel", "Index")
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                                firstPanel = true;
                            }
                        }
                        @if (User.IsInRole("Administrator") || User.IsInRole("Create/Modify Meetings or Events") || User.IsInRole("Remove Records"))
                        {
                            <div class="panel-footer text-center">
                                @Html.ActionLink("Edit", "Edit", new { id = item.ID }, new { @class = "btn btn-sm btn-default" }) 
                                @Html.ActionLink("Delete", "Delete", new { id = item.ID }, new { @class = "btn btn-sm btn-danger" })
                            </div>
                        }
                    </div>
                </div>
                firstPanel = true;
            }
        }
    </div>
</div>

@section scripts{
    @Scripts.Render("~/bundles/MultiSelectlist")
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/searchScript.js" type="text/javascript"></script>
    <script>
        $(document).ready(function () {

            ShowPopup = function () {
                if (!window.showModalDialog) {
                    window.open('/FileStorages/UploadNewFile', "WindowPopup", 'width=400px,height=400px');
                }
                window.showModalDialog('/FileStorages/UploadNewFile', "WindowPopup", 'width=400px,height=400px');
            }

            $('#glyphAddEvent').on('click', function () {
                $('#EventsTitle').slideToggle();
                $('#EventPanel').slideToggle();
                $('#NewEvent').slideToggle();
                $('#newMeetingEventTitle').slideToggle();
                $('.panel-footer').slideToggle();
                $('#glyphAddEvent').fadeToggle();
            });

            $('textarea').htmlarea({
                toolbar: [
                    ["increasefontsize", "decreasefontsize", "bold", "italic", "underline", "strikethrough"],
                    ["indent", "outdent", "justifyleft", "justifycenter", "justifyright"],
                    ["orderedList", "unorderedList"],
                    ["p", "h1", "h2", "h3", "h4", "h5", "h6", "horizontalrule"],
                    ["image", "link", "unlink", "html"]
                ]
            });

            resizeHtmlEditor();
            $(window).resize(resizeHtmlEditor);

            $('[data-toggle="popover"]').popover();

            $("[name='selectedRoles']").bootstrapSwitch();

            function resizeHtmlEditor() {
                $('div.jHtmlArea').find('div.ToolBar').css('width', '100%');
                $('div.jHtmlArea iframe').css('width', '100%');
                $('div.jHtmlArea iframe').css('height', '100%');
                $('div.jHtmlArea iframe').parent().css('width', '100%');
            }
        });
    </script>
}
