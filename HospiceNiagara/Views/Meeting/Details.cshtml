@model HospiceNiagara.Models.Meeting

@{
    ViewBag.Title = @Html.DisplayFor(model => model.EventTitle);
}
<div class="col-sm-8">
    <div class="panel panel-success ">
        <div class="panel-heading">
           @Html.DisplayFor(model => model.EventTitle)
        </div>
        <div class="panel-body">
            @*<div class="text-center">
                @{
                    foreach (var f in Model.FileStores)
                    {
                        if (f.FileContent != null && f.MimeType.Contains("image"))
                        {
                            string image64 = Convert.ToBase64String(f.FileContent);
                            string imageSrc = string.Format("data:" + f.MimeType + ";base64, {0}", image64);
                            <img src="@imageSrc" width="85%" />
                            
                        }
                    }
                }
            </div>*@
            <div id="myCarousel" class="carousel slide" data-ride="carousel">
                <ol class="carousel-indicators">
                    @{
                        int count = 0;
                        foreach (var f in Model.FileStores)
                        {
                            if (f.FileContent != null && f.MimeType.Contains("image"))
                            {
                                if (count == 0)
                                {
                                    <li data-target="#myCarousel" data-slide-to=@count class="active"></li>
                                }
                                else
                                {
                                    <li data-target="#myCarousel" data-slide-to=@count></li>
                                }
                                count++;
                            }
                        }
                    }
                </ol>
                <div class="carousel-inner" role="listbox">
                    @{
                        count = 0;
                        foreach (var f in Model.FileStores)
                        {
                            if (f.FileContent != null && f.MimeType.Contains("image"))
                            {
                                if (count == 0)
                                {
                                    <div class="item active">
                                        @{
                                    string image64 = Convert.ToBase64String(f.FileContent);
                                    string imageSrc = string.Format("data:" + f.MimeType + ";base64, {0}", image64);
                                        }
                                        <img src="@imageSrc" />
                                    </div>
                                }
                                else
                                {
                                    <div class="item">
                                        @{
                                    string image64 = Convert.ToBase64String(f.FileContent);
                                    string imageSrc = string.Format("data:" + f.MimeType + ";base64, {0}", image64);
                                        }
                                        <img src="@imageSrc" />
                                    </div>
                                }
                                count++;
                            }
                        }
                    }
                </div>
                    <!-- Left and right controls -->
                    <a class="left carousel-control" href="#myCarousel" role="button" data-slide="prev">
                        <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
                        <span class="sr-only">Previous</span>
                    </a>
                    <a class="right carousel-control" href="#myCarousel" role="button" data-slide="next">
                        <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
                        <span class="sr-only">Next</span>
                    </a>
                </div>
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.EventDiscription)
                </dt>

                <dd>
                    @Html.Raw(Html.Encode(Model.EventDiscription).Replace("\n", "<br />"))
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.EventLocation)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.EventLocation)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.EventStartString)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.EventStartString)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.EventEndString)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.EventEndString)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.EventRequirments)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.EventRequirments)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.EventLinks)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.EventLinks)
                </dd>

            </dl>
            <p class="text-center">
                @if (User.IsInRole("Administrator"))
                {
                    @Html.ActionLink("Edit", "Edit", new { id = Model.ID }) <span>|</span>
                }
                @Html.ActionLink("Back to List", "Index")
            </p>
        </div>
            
    </div>
</div>

<div class="col-sm-4">
    <div class="panel panel-success">
        <div class="panel-heading">
            RSVP
        </div>
        <div class="panel-body">
            <table class="table">
                @{
                    List<HospiceNiagara.Models.MeetingUserRSVP> rsvp = ViewBag.meetingRSVP;
                    foreach (var r in rsvp)
                    {
                        <tr>
                            <td>
                                @if (r.ComingYorN == true)
                                {
                                    @:Yes
                                }
                                else if (r.ComingYorN == false)
                                {
                                    @:No
                                }
                                else
                                {
                                    @:No Response
                                }
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => r.RSVPNotes)
                            </td>
                            <td>
                                @if (r.ComingYorN.HasValue)
                                {
                                    @Html.ActionLink("Changed your Mind?", "../MeetingUserRSVPs/Edit", new { id = r.ID })
                                }
                                else
                                {
                                    @Html.ActionLink("Are you Attending?", "../MeetingUserRSVPs/Edit", new { id = r.ID })
                                }
                            </td>
                        </tr>
                    }
                }
            </table>
        </div>
    </div>

    <div class="panel panel-success">
        <div class="panel-heading">
            Related Files
        </div>
        <div class="panel-body">
            <table class="table">
                <tr>
                    @{
                        List<HospiceNiagara.ViewModels.FileStorageVM> files = ViewBag.FileStorages;
                        foreach (var f in files)
                        {
                            @:</tr><tr>
                            @:<td>
                                <a href=../../FileStorages/Download/@f.ID>@f.FileName</a>
                                @:</td>
                            @:<td>
                                @f.FileDescription
                                @:</td>
                        }
                        @:</tr>
                    }
                </table>
            </div>
        </div>
        
        @if(User.IsInRole("Administrator"))
        {
           <div class="panel panel-success">
            <div class="panel-heading">
                All RSVPs
            </div>
            <div class="panel-body">
                <table class="table">
                    @{
                        List<HospiceNiagara.Models.MeetingUserRSVP> rsvps = ViewBag.meetingRSVPs;
                        foreach (var rs in rsvps)
                        {
                            <tr>
                                <td>
                                    
                                </td>
                                <td>
                                    @if (rs.ComingYorN == true)
                                    {
                                        @:Yes
                                    }
                                    else if (rs.ComingYorN == false)
                                    {
                                        @:No
                                    }
                                    else
                                    {
                                        @:No Response
                                    }
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => rs.RSVPNotes)
                                </td>
                            </tr>
                        }
                    }
                </table>
            </div>
        </div> 
        }
        
    </div>